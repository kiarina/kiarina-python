name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      falkordb:
        image: falkordb/falkordb:latest
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli -p 6379 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Install mise
      uses: jdx/mise-action@v3
      with:
        version: 2025.9.6
        cache: true
        install: false
    
    - name: Run CI checks
      run: mise run ci --no-docker
    
    - name: Extract release notes from CHANGELOG
      id: changelog
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF_NAME#v}
        echo "Version: $VERSION"
        
        # Use mise task to extract changelog
        if mise run extract-changelog "$VERSION" --output /tmp/release_notes.md; then
          echo "use_auto_notes=false" >> $GITHUB_OUTPUT
          echo "Release notes preview:"
          echo "---"
          cat /tmp/release_notes.md
          echo "---"
        else
          echo "No changelog entry found for version $VERSION, using auto-generated notes"
          echo "use_auto_notes=true" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.whl
          dist/*.tar.gz
        body_path: ${{ steps.changelog.outputs.use_auto_notes == 'false' && '/tmp/release_notes.md' || '' }}
        generate_release_notes: ${{ steps.changelog.outputs.use_auto_notes == 'true' }}
        draft: false
        prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
    
    # Publish all packages to PyPI from the root dist directory
    - name: Publish all packages to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      continue-on-error: true
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist/
        skip-existing: true
        verbose: true
